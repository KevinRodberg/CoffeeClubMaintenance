llY=0; llx=0; urY=995000; urX=731500 },
"LEC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=675000; urY=1050000; urX=975000 },
"SUB"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=900000; llx=700000; urY=995000; urX=731500})
if (!file.exists(logfile)){file.create(logfile)}
StrtDate = paste0(year,'-01-01')
RangeDate1 = paste0(year,'-01-01')
RangeDate2 = paste0(year+1,'-01-01')
EarlyDate = paste0(year-1,'-12-31')
coords = data.frame(llY,llx,urY,urX, StrtDate,RangeDate1,RangeDate2,EarlyDate,
llY,llx,urY,urX,RangeDate1,RangeDate2)
paramNames<-paste(names(coords),collapse=" ")
queryParams<-paste(coords ,collapse=' ')
NewSqlQ <- paste("  SELECT  ab.pixel_id, ab.x, ab.y, ab.day, ab.fake0 + NVL (sumval, 0)  ",
"  FROM                                                                 ",
"     (   SELECT pixel_id, x,  y, day, 0 fake0 FROM                     ",
"         ( SELECT pixel_id, pixel_centroid_x x, pixel_centroid_y y     ",
"           FROM nrd_pixel p0                                           ",
"           WHERE p0.pixel_id <> 99999999                               ",
"       AND p0.pixel_centroid_y > ?  AND p0.pixel_centroid_x > ?        ",
"       AND p0.pixel_centroid_y < ?  AND p0.pixel_centroid_x < ? ) A,   ",
"       /* create daily dates virutal table */                          ",
"       ( SELECT  /* starting date */                                   ",
"           TO_CHAR(TO_DATE(?,'yyyy-mm-dd')+LEVEL-1,'yyyy-mm-dd') DAY   ",
"           FROM DUAL WHERE   /* Range of dates */                      ",
"        (TO_CHAR(TO_DATE(?,'yyyy-mm-dd') + LEVEL-1,'yyyy-mm-dd')  < ?) ",
"           CONNECT BY LEVEL <= (                                       ",
"             /* count # days between Today and Earliest date   */      ",
"           SELECT (TRUNC(SYSDATE) -  TO_DATE(?, 'yyyy-mm-dd'))         ",
"            FROM DUAL)) B) AB                                          ",
"   LEFT JOIN                                                           ",
"     ( SELECT featureid, p.pixel_centroid_x x, p.pixel_centroid_y y,   ",
"       tstypeid,TRUNC(tsdatetime) tsdate,(SUM(tsvalue)/25.4) sumval    ",
"       FROM NRD_TIME_SERIES NTS, nrd_pixel p                           ",
"       WHERE FEATUREID = p.pixel_id                                    ",
"       AND p.pixel_id <> 99999999                                      ",
"       AND p.pixel_centroid_y > ?  AND p.pixel_centroid_x > ?          ",
"       AND p.pixel_centroid_y < ?  AND p.pixel_centroid_x < ?          ",
"       AND TSTYPEID = 5                                                ",
"       AND TSDATETIME between                                          ",
"                       TO_DATE (?,'yyyy/mm/dd')  AND                   ",
"                       TO_DATE (?,'yyyy/mm/dd')                        ",
"      GROUP BY  featureid, p.pixel_centroid_x ,p.pixel_centroid_y,     ",
"                     tstypeid, TRUNC (tsdatetime)) c                   ",
"   ON ab.pixel_id = c.FEATUREID                                        ",
"     AND ab.day = TO_CHAR (tsdate, 'yyyy-mm-dd')                       ",
"  ORDER BY   1, 4                                                      ",sep="")
NewSqlQ
coords
MapArea = "LWC"; NRDtype ="NRD"; year = 2016
switch(MapArea,
"LWC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile <-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=0; urY=995000; urX=731500 },
"LEC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=675000; urY=1050000; urX=975000 },
"SUB"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=900000; llx=700000; urY=995000; urX=731500})
if (!file.exists(logfile)){file.create(logfile)}
StrtDate = paste0(year,'-01-01')
RangeDate1 = paste0(year,'-01-01')
RangeDate2 = paste0(year+1,'-01-01')
EarlyDate = paste0(year-1,'-12-31')
coords = data.frame(llY,llx,urY,urX, StrtDate,RangeDate1,RangeDate2,EarlyDate,
llY,llx,urY,urX,RangeDate1,RangeDate2)
coords
typeId<- switch(NRDtype,"NRD"=3,"RET"=5 )
typeId
# SQL sums data grouped daily so 15 min Rainfall and Daily ET summaries are consistent
typeId<- switch(NRDtype,"NRD"=3,"RET"=5 )
multiplier<- switch(NRDtype,"NRD"=1,"RET"=25.4 )
coords = data.frame(llY,llx,urY,urX, StrtDate,RangeDate1,RangeDate2,EarlyDate, typeId, multiplier,
llY,llx,urY,urX,RangeDate1,RangeDate2)
coords
MapArea = "LWC"; NRDtype ="NRD"; year = 2016
library(RODBCext)
if (!is.element(NRDtype,c("NRD","RET"))){ exit()}
if (!is.element(MapArea,c("LEC","LWC","SUB"))) { exit() }
# Connect to DBHdryo's Database Instance (wrep) as PUB/PUB
channel <- odbcConnect("wrep", uid="pub", pwd="pub", believeNRows=FALSE)
# Check that connection is working (Optional)
odbcGetInfo(channel)
# ET data can be queried changing NRD_TIME_SERIES to NRD_ET_TIME_SERIES_VW
# and TSTYPEID = 3 (Rainfall) to TSTYPEID = 5 (Reference ET)
# SQL sums data grouped daily so 15 min Rainfall and Daily ET summaries are consistent
typeId<- switch(NRDtype,"NRD"=3,"RET"=5 )
multiplier<- switch(NRDtype,"NRD"=1.0,"RET"=25.4 )
switch(MapArea,
"LWC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile <-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=0; urY=995000; urX=731500 },
"LEC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=675000; urY=1050000; urX=975000 },
"SUB"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=900000; llx=700000; urY=995000; urX=731500})
if (!file.exists(logfile)){file.create(logfile)}
StrtDate = paste0(year,'-01-01')
RangeDate1 = paste0(year,'-01-01')
RangeDate2 = paste0(year+1,'-01-01')
EarlyDate = paste0(year-1,'-12-31')
coords = data.frame(llY,llx,urY,urX, StrtDate,RangeDate1,RangeDate2,EarlyDate, typeId, multiplier,
llY,llx,urY,urX,RangeDate1,RangeDate2)
paramNames<-paste(names(coords),collapse=" ")
queryParams<-paste(coords ,collapse=' ')
write(paramNames,file=logfile,append=TRUE)
write(queryParams,file=logfile,append=TRUE)
logtext=paste("Start query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,file=logfile,append=TRUE)
NewSqlQ <- paste("  SELECT  ab.pixel_id, ab.x, ab.y, ab.day, ab.fake0 + NVL (sumval, 0)  ",
"  FROM                                                                 ",
"     (   SELECT pixel_id, x,  y, day, 0 fake0 FROM                     ",
"         ( SELECT pixel_id, pixel_centroid_x x, pixel_centroid_y y     ",
"           FROM nrd_pixel p0                                           ",
"           WHERE p0.pixel_id <> 99999999                               ",
"       AND p0.pixel_centroid_y > ?  AND p0.pixel_centroid_x > ?        ",
"       AND p0.pixel_centroid_y < ?  AND p0.pixel_centroid_x < ? ) A,   ",
"       /* create daily dates virutal table */                          ",
"       ( SELECT  /* starting date */                                   ",
"           TO_CHAR(TO_DATE(?,'yyyy-mm-dd')+LEVEL-1,'yyyy-mm-dd') DAY   ",
"           FROM DUAL WHERE   /* Range of dates */                      ",
"        (TO_CHAR(TO_DATE(?,'yyyy-mm-dd') + LEVEL-1,'yyyy-mm-dd')  < ?) ",
"           CONNECT BY LEVEL <= (                                       ",
"             /* count # days between Today and Earliest date   */      ",
"           SELECT (TRUNC(SYSDATE) -  TO_DATE(?, 'yyyy-mm-dd'))         ",
"            FROM DUAL)) B) AB                                          ",
"   LEFT JOIN                                                           ",
"     ( SELECT featureid, p.pixel_centroid_x x, p.pixel_centroid_y y,   ",
"       tstypeid,TRUNC(tsdatetime) tsdate,(SUM(tsvalue)/?) sumval    ",
"       FROM NRD_TIME_SERIES NTS, nrd_pixel p                           ",
"       WHERE FEATUREID = p.pixel_id                                    ",
"       AND p.pixel_id <> 99999999                                      ",
"       AND p.pixel_centroid_y > ?  AND p.pixel_centroid_x > ?          ",
"       AND p.pixel_centroid_y < ?  AND p.pixel_centroid_x < ?          ",
"       AND TSTYPEID = ?                                                ",
"       AND TSDATETIME between                                          ",
"                       TO_DATE (?,'yyyy/mm/dd')  AND                   ",
"                       TO_DATE (?,'yyyy/mm/dd')                        ",
"      GROUP BY  featureid, p.pixel_centroid_x ,p.pixel_centroid_y,     ",
"                     tstypeid, TRUNC (tsdatetime)) c                   ",
"   ON ab.pixel_id = c.FEATUREID                                        ",
"     AND ab.day = TO_CHAR (tsdate, 'yyyy-mm-dd')                       ",
"  ORDER BY   1, 4                                                      ",sep="")
xi <-do.call("paste",c(strsplit(NewSqlQ," "),sep=" "))
xii <-xi[xi>""]
query<-paste(xii,collapse=' ')
write(query,file=logfile,append=TRUE)
nrdDF <- sqlExecute(channel, NewSqlQ, coords,fetch=TRUE)
odbcClose(channel)
logtext<-paste("Finished query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,logfile,append=TRUE)
colnames(nrdDF) <- c("Pixel_id", "X", "Y","Date", year)
#  "Mean" is an arbitrary function yet needed to pivot the data
nrd <- dcast(nrdDF, Pixel_id+X+Y ~ Date, mean )
# Export NexRAD Daily Data for each year in a separate csv file
write.table(nrd, file,  sep=",", col.names=TRUE, row.names=FALSE, quote=TRUE, na="0.00")
# Calculate Pixel sums for each year and append it as a final column
# and also use it to create another table of annual sums.
ystr<- as.character(year)
nrdSum <- aggregate(nrdDF[c(ystr)],FUN=sum, na.rm=TRUE, by= list(nrdDF$Pixel_id,nrdDF$X,nrdDF$Y))
library(data.table)
if (!is.element(NRDtype,c("NRD","RET"))){ exit()}
if (!is.element(MapArea,c("LEC","LWC","SUB"))) { exit() }
# Connect to DBHdryo's Database Instance (wrep) as PUB/PUB
channel <- odbcConnect("wrep", uid="pub", pwd="pub", believeNRows=FALSE)
# Check that connection is working (Optional)
odbcGetInfo(channel)
# ET data can be queried changing NRD_TIME_SERIES to NRD_ET_TIME_SERIES_VW
# and TSTYPEID = 3 (Rainfall) to TSTYPEID = 5 (Reference ET)
# SQL sums data grouped daily so 15 min Rainfall and Daily ET summaries are consistent
typeId<- switch(NRDtype,"NRD"=3,"RET"=5 )
multiplier<- switch(NRDtype,"NRD"=1.0,"RET"=25.4 )
switch(MapArea,
"LWC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile <-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=0; urY=995000; urX=731500 },
"LEC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=675000; urY=1050000; urX=975000 },
"SUB"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=900000; llx=700000; urY=995000; urX=731500})
if (!file.exists(logfile)){file.create(logfile)}
StrtDate = paste0(year,'-01-01')
RangeDate1 = paste0(year,'-01-01')
RangeDate2 = paste0(year+1,'-01-01')
EarlyDate = paste0(year-1,'-12-31')
coords = data.frame(llY,llx,urY,urX, StrtDate,RangeDate1,RangeDate2,EarlyDate, typeId, multiplier,
llY,llx,urY,urX,RangeDate1,RangeDate2)
paramNames<-paste(names(coords),collapse=" ")
queryParams<-paste(coords ,collapse=' ')
write(paramNames,file=logfile,append=TRUE)
write(queryParams,file=logfile,append=TRUE)
logtext=paste("Start query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,file=logfile,append=TRUE)
NewSqlQ <- paste("  SELECT  ab.pixel_id, ab.x, ab.y, ab.day, ab.fake0 + NVL (sumval, 0)  ",
"  FROM                                                                 ",
"     (   SELECT pixel_id, x,  y, day, 0 fake0 FROM                     ",
"         ( SELECT pixel_id, pixel_centroid_x x, pixel_centroid_y y     ",
"           FROM nrd_pixel p0                                           ",
"           WHERE p0.pixel_id <> 99999999                               ",
"       AND p0.pixel_centroid_y > ?  AND p0.pixel_centroid_x > ?        ",
"       AND p0.pixel_centroid_y < ?  AND p0.pixel_centroid_x < ? ) A,   ",
"       /* create daily dates virutal table */                          ",
"       ( SELECT  /* starting date */                                   ",
"           TO_CHAR(TO_DATE(?,'yyyy-mm-dd')+LEVEL-1,'yyyy-mm-dd') DAY   ",
"           FROM DUAL WHERE   /* Range of dates */                      ",
"        (TO_CHAR(TO_DATE(?,'yyyy-mm-dd') + LEVEL-1,'yyyy-mm-dd')  < ?) ",
"           CONNECT BY LEVEL <= (                                       ",
"             /* count # days between Today and Earliest date   */      ",
"           SELECT (TRUNC(SYSDATE) -  TO_DATE(?, 'yyyy-mm-dd'))         ",
"            FROM DUAL)) B) AB                                          ",
"   LEFT JOIN                                                           ",
"     ( SELECT featureid, p.pixel_centroid_x x, p.pixel_centroid_y y,   ",
"       tstypeid,TRUNC(tsdatetime) tsdate,(SUM(tsvalue)/?) sumval    ",
"       FROM NRD_TIME_SERIES NTS, nrd_pixel p                           ",
"       WHERE FEATUREID = p.pixel_id                                    ",
"       AND p.pixel_id <> 99999999                                      ",
"       AND p.pixel_centroid_y > ?  AND p.pixel_centroid_x > ?          ",
"       AND p.pixel_centroid_y < ?  AND p.pixel_centroid_x < ?          ",
"       AND TSTYPEID = ?                                                ",
"       AND TSDATETIME between                                          ",
"                       TO_DATE (?,'yyyy/mm/dd')  AND                   ",
"                       TO_DATE (?,'yyyy/mm/dd')                        ",
"      GROUP BY  featureid, p.pixel_centroid_x ,p.pixel_centroid_y,     ",
"                     tstypeid, TRUNC (tsdatetime)) c                   ",
"   ON ab.pixel_id = c.FEATUREID                                        ",
"     AND ab.day = TO_CHAR (tsdate, 'yyyy-mm-dd')                       ",
"  ORDER BY   1, 4                                                      ",sep="")
xi <-do.call("paste",c(strsplit(NewSqlQ," "),sep=" "))
xii <-xi[xi>""]
query<-paste(xii,collapse=' ')
write(query,file=logfile,append=TRUE)
nrdDF <- sqlExecute(channel, NewSqlQ, coords,fetch=TRUE)
odbcClose(channel)
logtext<-paste("Finished query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,logfile,append=TRUE)
colnames(nrdDF) <- c("Pixel_id", "X", "Y","Date", year)
#  "Mean" is an arbitrary function yet needed to pivot the data
nrd <- dcast(nrdDF, Pixel_id+X+Y ~ Date, mean )
# Export NexRAD Daily Data for each year in a separate csv file
write.table(nrd, file,  sep=",", col.names=TRUE, row.names=FALSE, quote=TRUE, na="0.00")
# Calculate Pixel sums for each year and append it as a final column
# and also use it to create another table of annual sums.
ystr<- as.character(year)
nrdSum <- aggregate(nrdDF[c(ystr)],FUN=sum, na.rm=TRUE, by= list(nrdDF$Pixel_id,nrdDF$X,nrdDF$Y))
View(nrdSum)
NewSqlQ
coords
library(RODBCext)
library(data.table)
if (!is.element(NRDtype,c("NRD","RET"))){ exit()}
if (!is.element(MapArea,c("LEC","LWC","SUB"))) { exit() }
# Connect to DBHdryo's Database Instance (wrep) as PUB/PUB
channel <- odbcConnect("wrep", uid="pub", pwd="pub", believeNRows=FALSE)
# Check that connection is working (Optional)
odbcGetInfo(channel)
# ET data can be queried changing NRD_TIME_SERIES to NRD_ET_TIME_SERIES_VW
# and TSTYPEID = 3 (Rainfall) to TSTYPEID = 5 (Reference ET)
# SQL sums data grouped daily so 15 min Rainfall and Daily ET summaries are consistent
typeId<- switch(NRDtype,"NRD"=3,"RET"=5 )
multiplier<- switch(NRDtype,"NRD"=1.0,"RET"=25.4 )
switch(MapArea,
"LWC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile <-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=0; urY=995000; urX=731500 },
"LEC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=675000; urY=1050000; urX=975000 },
"SUB"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=900000; llx=700000; urY=995000; urX=731500})
if (!file.exists(logfile)){file.create(logfile)}
StrtDate = paste0(year,'-01-01')
RangeDate1 = paste0(year,'-01-01')
RangeDate2 = paste0(year+1,'-01-01')
EarlyDate = paste0(year-1,'-12-31')
coords = data.frame(llY,llx,urY,urX, StrtDate,RangeDate1,RangeDate2,EarlyDate, multiplier,typeId,
llY,llx,urY,urX,RangeDate1,RangeDate2)
paramNames<-paste(names(coords),collapse=" ")
queryParams<-paste(coords ,collapse=' ')
write(paramNames,file=logfile,append=TRUE)
write(queryParams,file=logfile,append=TRUE)
logtext=paste("Start query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,file=logfile,append=TRUE)
NewSqlQ <- paste("  SELECT  ab.pixel_id, ab.x, ab.y, ab.day, ab.fake0 + NVL (sumval, 0)  ",
"  FROM                                                                 ",
"     (   SELECT pixel_id, x,  y, day, 0 fake0 FROM                     ",
"         ( SELECT pixel_id, pixel_centroid_x x, pixel_centroid_y y     ",
"           FROM nrd_pixel p0                                           ",
"           WHERE p0.pixel_id <> 99999999                               ",
"       AND p0.pixel_centroid_y > ?  AND p0.pixel_centroid_x > ?        ",
"       AND p0.pixel_centroid_y < ?  AND p0.pixel_centroid_x < ? ) A,   ",
"       /* create daily dates virutal table */                          ",
"       ( SELECT  /* starting date */                                   ",
"           TO_CHAR(TO_DATE(?,'yyyy-mm-dd')+LEVEL-1,'yyyy-mm-dd') DAY   ",
"           FROM DUAL WHERE   /* Range of dates */                      ",
"        (TO_CHAR(TO_DATE(?,'yyyy-mm-dd') + LEVEL-1,'yyyy-mm-dd')  < ?) ",
"           CONNECT BY LEVEL <= (                                       ",
"             /* count # days between Today and Earliest date   */      ",
"           SELECT (TRUNC(SYSDATE) -  TO_DATE(?, 'yyyy-mm-dd'))         ",
"            FROM DUAL)) B) AB                                          ",
"   LEFT JOIN                                                           ",
"     ( SELECT featureid, p.pixel_centroid_x x, p.pixel_centroid_y y,   ",
"       tstypeid,TRUNC(tsdatetime) tsdate,(SUM(tsvalue)/?) sumval    ",
"       FROM NRD_TIME_SERIES NTS, nrd_pixel p                           ",
"       WHERE FEATUREID = p.pixel_id                                    ",
"       AND p.pixel_id <> 99999999                                      ",
"       AND p.pixel_centroid_y > ?  AND p.pixel_centroid_x > ?          ",
"       AND p.pixel_centroid_y < ?  AND p.pixel_centroid_x < ?          ",
"       AND TSTYPEID = ?                                                ",
"       AND TSDATETIME between                                          ",
"                       TO_DATE (?,'yyyy/mm/dd')  AND                   ",
"                       TO_DATE (?,'yyyy/mm/dd')                        ",
"      GROUP BY  featureid, p.pixel_centroid_x ,p.pixel_centroid_y,     ",
"                     tstypeid, TRUNC (tsdatetime)) c                   ",
"   ON ab.pixel_id = c.FEATUREID                                        ",
"     AND ab.day = TO_CHAR (tsdate, 'yyyy-mm-dd')                       ",
"  ORDER BY   1, 4                                                      ",sep="")
xi <-do.call("paste",c(strsplit(NewSqlQ," "),sep=" "))
xii <-xi[xi>""]
query<-paste(xii,collapse=' ')
write(query,file=logfile,append=TRUE)
nrdDF <- sqlExecute(channel, NewSqlQ, coords,fetch=TRUE)
odbcClose(channel)
logtext<-paste("Finished query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,logfile,append=TRUE)
colnames(nrdDF) <- c("Pixel_id", "X", "Y","Date", year)
#  "Mean" is an arbitrary function yet needed to pivot the data
nrd <- dcast(nrdDF, Pixel_id+X+Y ~ Date, mean )
# Export NexRAD Daily Data for each year in a separate csv file
write.table(nrd, file,  sep=",", col.names=TRUE, row.names=FALSE, quote=TRUE, na="0.00")
# Calculate Pixel sums for each year and append it as a final column
# and also use it to create another table of annual sums.
ystr<- as.character(year)
nrdSum <- aggregate(nrdDF[c(ystr)],FUN=sum, na.rm=TRUE, by= list(nrdDF$Pixel_id,nrdDF$X,nrdDF$Y))
View(nrdSum)
View(nrd)
coords
coords = data.frame(llY,llx,urY,urX, StrtDate,RangeDate1,RangeDate2,EarlyDate, multiplier,
llY,llx,urY,urX,typeId, RangeDate1,RangeDate2)
paramNames<-paste(names(coords),collapse=" ")
queryParams<-paste(coords ,collapse=' ')
write(paramNames,file=logfile,append=TRUE)
write(queryParams,file=logfile,append=TRUE)
logtext=paste("Start query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,file=logfile,append=TRUE)
NewSqlQ <- paste("  SELECT  ab.pixel_id, ab.x, ab.y, ab.day, ab.fake0 + NVL (sumval, 0)  ",
"  FROM                                                                 ",
"     (   SELECT pixel_id, x,  y, day, 0 fake0 FROM                     ",
"         ( SELECT pixel_id, pixel_centroid_x x, pixel_centroid_y y     ",
"           FROM nrd_pixel p0                                           ",
"           WHERE p0.pixel_id <> 99999999                               ",
"       AND p0.pixel_centroid_y > ?  AND p0.pixel_centroid_x > ?        ",
"       AND p0.pixel_centroid_y < ?  AND p0.pixel_centroid_x < ? ) A,   ",
"       /* create daily dates virutal table */                          ",
"       ( SELECT  /* starting date */                                   ",
"           TO_CHAR(TO_DATE(?,'yyyy-mm-dd')+LEVEL-1,'yyyy-mm-dd') DAY   ",
"           FROM DUAL WHERE   /* Range of dates */                      ",
"        (TO_CHAR(TO_DATE(?,'yyyy-mm-dd') + LEVEL-1,'yyyy-mm-dd')  < ?) ",
"           CONNECT BY LEVEL <= (                                       ",
"             /* count # days between Today and Earliest date   */      ",
"           SELECT (TRUNC(SYSDATE) -  TO_DATE(?, 'yyyy-mm-dd'))         ",
"            FROM DUAL)) B) AB                                          ",
"   LEFT JOIN                                                           ",
"     ( SELECT featureid, p.pixel_centroid_x x, p.pixel_centroid_y y,   ",
"       tstypeid,TRUNC(tsdatetime) tsdate,(SUM(tsvalue)/?) sumval    ",
"       FROM NRD_TIME_SERIES NTS, nrd_pixel p                           ",
"       WHERE FEATUREID = p.pixel_id                                    ",
"       AND p.pixel_id <> 99999999                                      ",
"       AND p.pixel_centroid_y > ?  AND p.pixel_centroid_x > ?          ",
"       AND p.pixel_centroid_y < ?  AND p.pixel_centroid_x < ?          ",
"       AND TSTYPEID = ?                                                ",
"       AND TSDATETIME between                                          ",
"                       TO_DATE (?,'yyyy/mm/dd')  AND                   ",
"                       TO_DATE (?,'yyyy/mm/dd')                        ",
"      GROUP BY  featureid, p.pixel_centroid_x ,p.pixel_centroid_y,     ",
"                     tstypeid, TRUNC (tsdatetime)) c                   ",
"   ON ab.pixel_id = c.FEATUREID                                        ",
"     AND ab.day = TO_CHAR (tsdate, 'yyyy-mm-dd')                       ",
"  ORDER BY   1, 4                                                      ",sep="")
xi <-do.call("paste",c(strsplit(NewSqlQ," "),sep=" "))
xii <-xi[xi>""]
query<-paste(xii,collapse=' ')
write(query,file=logfile,append=TRUE)
nrdDF <- sqlExecute(channel, NewSqlQ, coords,fetch=TRUE)
odbcClose(channel)
logtext<-paste("Finished query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,logfile,append=TRUE)
colnames(nrdDF) <- c("Pixel_id", "X", "Y","Date", year)
#  "Mean" is an arbitrary function yet needed to pivot the data
nrd <- dcast(nrdDF, Pixel_id+X+Y ~ Date, mean )
channel <- odbcConnect("wrep", uid="pub", pwd="pub", believeNRows=FALSE)
odbcGetInfo(channel)
typeId<- switch(NRDtype,"NRD"=3,"RET"=5 )
multiplier<- switch(NRDtype,"NRD"=1.0,"RET"=25.4 )
switch(MapArea,
"LWC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile <-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=0; urY=995000; urX=731500 },
"LEC"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LEC/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=0; llx=675000; urY=1050000; urX=975000 },
"SUB"={file<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,year,".csv",sep="");
logfile<-paste("//ad.sfwmd.gov/dfsroot/data/wsd/gis/gisp_2012/DistrictAreaProj/LWCSASIAS/Data/"
,MapArea,"_",NRDtype,".log",sep="");
llY=900000; llx=700000; urY=995000; urX=731500})
if (!file.exists(logfile)){file.create(logfile)}
StrtDate = paste0(year,'-01-01')
RangeDate1 = paste0(year,'-01-01')
RangeDate2 = paste0(year+1,'-01-01')
EarlyDate = paste0(year-1,'-12-31')
coords = data.frame(llY,llx,urY,urX, StrtDate,RangeDate1,RangeDate2,EarlyDate, multiplier,
llY,llx,urY,urX,typeId, RangeDate1,RangeDate2)
paramNames<-paste(names(coords),collapse=" ")
queryParams<-paste(coords ,collapse=' ')
write(paramNames,file=logfile,append=TRUE)
write(queryParams,file=logfile,append=TRUE)
logtext=paste("Start query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,file=logfile,append=TRUE)
NewSqlQ <- paste("  SELECT  ab.pixel_id, ab.x, ab.y, ab.day, ab.fake0 + NVL (sumval, 0)  ",
"  FROM                                                                 ",
"     (   SELECT pixel_id, x,  y, day, 0 fake0 FROM                     ",
"         ( SELECT pixel_id, pixel_centroid_x x, pixel_centroid_y y     ",
"           FROM nrd_pixel p0                                           ",
"           WHERE p0.pixel_id <> 99999999                               ",
"       AND p0.pixel_centroid_y > ?  AND p0.pixel_centroid_x > ?        ",
"       AND p0.pixel_centroid_y < ?  AND p0.pixel_centroid_x < ? ) A,   ",
"       /* create daily dates virutal table */                          ",
"       ( SELECT  /* starting date */                                   ",
"           TO_CHAR(TO_DATE(?,'yyyy-mm-dd')+LEVEL-1,'yyyy-mm-dd') DAY   ",
"           FROM DUAL WHERE   /* Range of dates */                      ",
"        (TO_CHAR(TO_DATE(?,'yyyy-mm-dd') + LEVEL-1,'yyyy-mm-dd')  < ?) ",
"           CONNECT BY LEVEL <= (                                       ",
"             /* count # days between Today and Earliest date   */      ",
"           SELECT (TRUNC(SYSDATE) -  TO_DATE(?, 'yyyy-mm-dd'))         ",
"            FROM DUAL)) B) AB                                          ",
"   LEFT JOIN                                                           ",
"     ( SELECT featureid, p.pixel_centroid_x x, p.pixel_centroid_y y,   ",
"       tstypeid,TRUNC(tsdatetime) tsdate,(SUM(tsvalue)/?) sumval    ",
"       FROM NRD_TIME_SERIES NTS, nrd_pixel p                           ",
"       WHERE FEATUREID = p.pixel_id                                    ",
"       AND p.pixel_id <> 99999999                                      ",
"       AND p.pixel_centroid_y > ?  AND p.pixel_centroid_x > ?          ",
"       AND p.pixel_centroid_y < ?  AND p.pixel_centroid_x < ?          ",
"       AND TSTYPEID = ?                                                ",
"       AND TSDATETIME between                                          ",
"                       TO_DATE (?,'yyyy/mm/dd')  AND                   ",
"                       TO_DATE (?,'yyyy/mm/dd')                        ",
"      GROUP BY  featureid, p.pixel_centroid_x ,p.pixel_centroid_y,     ",
"                     tstypeid, TRUNC (tsdatetime)) c                   ",
"   ON ab.pixel_id = c.FEATUREID                                        ",
"     AND ab.day = TO_CHAR (tsdate, 'yyyy-mm-dd')                       ",
"  ORDER BY   1, 4                                                      ",sep="")
xi <-do.call("paste",c(strsplit(NewSqlQ," "),sep=" "))
xii <-xi[xi>""]
query<-paste(xii,collapse=' ')
write(query,file=logfile,append=TRUE)
nrdDF <- sqlExecute(channel, NewSqlQ, coords,fetch=TRUE)
odbcClose(channel)
logtext<-paste("Finished query for year:", year, "@",format(Sys.time(),"%X"))
write(logtext,logfile,append=TRUE)
colnames(nrdDF) <- c("Pixel_id", "X", "Y","Date", year)
#  "Mean" is an arbitrary function yet needed to pivot the data
nrd <- dcast(nrdDF, Pixel_id+X+Y ~ Date, mean )
# Export NexRAD Daily Data for each year in a separate csv file
write.table(nrd, file,  sep=",", col.names=TRUE, row.names=FALSE, quote=TRUE, na="0.00")
# Calculate Pixel sums for each year and append it as a final column
# and also use it to create another table of annual sums.
ystr<- as.character(year)
nrdSum <- aggregate(nrdDF[c(ystr)],FUN=sum, na.rm=TRUE, by= list(nrdDF$Pixel_id,nrdDF$X,nrdDF$Y))
View(nrd)
setwd("//ad.sfwmd.gov/dfsroot/data/wsd/SUP/devel/source/R")
